{"ast":null,"code":"import axios from 'axios';\nconst apiClient = axios.create({\n  baseURL: \"http://localhost:5248\"\n});\napiClient.interceptors.response.use(response => response, error => {\n  console.error(error);\n  return Promise.reject(error);\n});\nconst apiUrl = \"http://localhost:5248\";\nexport default {\n  getTasks: async () => {\n    const result = await axios.get(`${apiUrl}/todoitems\n    `);\n    debugger;\n    return result.data;\n  },\n  addTask: async name => {\n    console.log('addTask', name);\n    const result = await axios.post(`${apiUrl}/todoitems`, {\n      name: name,\n      isComplete: false\n    });\n    return result.data;\n  },\n  setCompleted: async (id, IsComplete) => {\n    console.log('setCompleted', {\n      id,\n      IsComplete\n    });\n    const result = await axios.put(`${apiUrl}/todoitems/${id}`, {\n      IsComplete: IsComplete\n    });\n    return result.data;\n  },\n  deleteTask: async id => {\n    const result = await axios.delete(`${apiUrl}/todoitems/${id}`);\n    return result.data;\n  }\n};","map":{"version":3,"names":["axios","apiClient","create","baseURL","interceptors","response","use","error","console","Promise","reject","apiUrl","getTasks","result","get","data","addTask","name","log","post","isComplete","setCompleted","id","IsComplete","put","deleteTask","delete"],"sources":["C:/Users/User/Documents/תכנות רחלי/תכנות ו/ToDoListReact-master/src/service.js"],"sourcesContent":["import axios from 'axios';\n\nconst apiClient = axios.create({\n  baseURL: \"http://localhost:5248\",\n});\n\napiClient.interceptors.response.use(\n  response => response,\n  error => {\n    console.error(error);\n    return Promise.reject(error);\n  }\n)\nconst apiUrl = \"http://localhost:5248\"\n\nexport default {\n  getTasks: async () => {\n    const result = await axios.get(`${apiUrl}/todoitems\n    `)   \n    debugger; \n    return result.data;\n  },\n\n  addTask: async(name)=>{\n    console.log('addTask', name)\n    const result = await axios.post(`${apiUrl}/todoitems`, {name:name,isComplete:false }) \n    return result.data;\n  },\n\n \n  setCompleted: async(id, IsComplete)=>{\n    console.log('setCompleted', {id, IsComplete})\n    const result = await axios.put(`${apiUrl}/todoitems/${id}`,{IsComplete:IsComplete}) \n    return result.data;\n  },\n\n  deleteTask:async(id)=>{\n    const result = await axios.delete(`${apiUrl}/todoitems/${id}`) \n    return result.data\n  }\n};\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,SAAS,GAAGD,KAAK,CAACE,MAAM,CAAC;EAC7BC,OAAO,EAAE;AACX,CAAC,CAAC;AAEFF,SAAS,CAACG,YAAY,CAACC,QAAQ,CAACC,GAAG,CACjCD,QAAQ,IAAIA,QAAQ,EACpBE,KAAK,IAAI;EACPC,OAAO,CAACD,KAAK,CAACA,KAAK,CAAC;EACpB,OAAOE,OAAO,CAACC,MAAM,CAACH,KAAK,CAAC;AAC9B,CAAC,CACF;AACD,MAAMI,MAAM,GAAG,uBAAuB;AAEtC,eAAe;EACbC,QAAQ,EAAE,MAAAA,CAAA,KAAY;IACpB,MAAMC,MAAM,GAAG,MAAMb,KAAK,CAACc,GAAG,CAAE,GAAEH,MAAO;AAC7C,KAAK,CAAC;IACF;IACA,OAAOE,MAAM,CAACE,IAAI;EACpB,CAAC;EAEDC,OAAO,EAAE,MAAMC,IAAI,IAAG;IACpBT,OAAO,CAACU,GAAG,CAAC,SAAS,EAAED,IAAI,CAAC;IAC5B,MAAMJ,MAAM,GAAG,MAAMb,KAAK,CAACmB,IAAI,CAAE,GAAER,MAAO,YAAW,EAAE;MAACM,IAAI,EAACA,IAAI;MAACG,UAAU,EAAC;IAAM,CAAC,CAAC;IACrF,OAAOP,MAAM,CAACE,IAAI;EACpB,CAAC;EAGDM,YAAY,EAAE,MAAAA,CAAMC,EAAE,EAAEC,UAAU,KAAG;IACnCf,OAAO,CAACU,GAAG,CAAC,cAAc,EAAE;MAACI,EAAE;MAAEC;IAAU,CAAC,CAAC;IAC7C,MAAMV,MAAM,GAAG,MAAMb,KAAK,CAACwB,GAAG,CAAE,GAAEb,MAAO,cAAaW,EAAG,EAAC,EAAC;MAACC,UAAU,EAACA;IAAU,CAAC,CAAC;IACnF,OAAOV,MAAM,CAACE,IAAI;EACpB,CAAC;EAEDU,UAAU,EAAC,MAAMH,EAAE,IAAG;IACpB,MAAMT,MAAM,GAAG,MAAMb,KAAK,CAAC0B,MAAM,CAAE,GAAEf,MAAO,cAAaW,EAAG,EAAC,CAAC;IAC9D,OAAOT,MAAM,CAACE,IAAI;EACpB;AACF,CAAC"},"metadata":{},"sourceType":"module"}