{"ast":null,"code":"import axios from 'axios';\naxios.defaults.baseURL = process.env.REACT_APP_API;\nconst apiClient = axios.create({\n  baseURL: process.env.REACT_APP_API\n});\naxios.defaults.baseURL = process.env.REACT_APP_API;\napiClient.interceptors.response.use(response => response, error => {\n  console.error(error);\n  return Promise.reject(error);\n});\n// const apiUrl = process.env.REACT_APP_API\n\nexport default {\n  getTasks: async () => {\n    console.log('get');\n    const result = await axios.get();\n    return result.data;\n  },\n  addTask: async name => {\n    console.log('addTask', name);\n    const result = await axios.post(``, {\n      name: name,\n      isComplete: false\n    });\n    return result.data;\n  },\n  setCompleted: async (id, IsComplete) => {\n    console.log('setCompleted', {\n      id,\n      IsComplete\n    });\n    const result = await axios.put(`/${id}`, {\n      IsComplete: IsComplete\n    });\n    return result.data;\n  },\n  deleteTask: async id => {\n    const result = await axios.delete(`/${id}`);\n    return result.data;\n  }\n};","map":{"version":3,"names":["axios","defaults","baseURL","process","env","REACT_APP_API","apiClient","create","interceptors","response","use","error","console","Promise","reject","getTasks","log","result","get","data","addTask","name","post","isComplete","setCompleted","id","IsComplete","put","deleteTask","delete"],"sources":["C:/Users/User/Documents/תכנות רחלי/תכנות ו/practikod/ToDoListClient/src/service.js"],"sourcesContent":["import axios from 'axios';\naxios.defaults.baseURL=process.env.REACT_APP_API;\n \n\nconst apiClient = axios.create({\n  baseURL: process.env.REACT_APP_API,\n});\naxios.defaults.baseURL = process.env.REACT_APP_API;\n\napiClient.interceptors.response.use(\n  response => response,\n  error => {\n\n    console.error(error);\n    return Promise.reject(error);\n  }\n)\n// const apiUrl = process.env.REACT_APP_API\n\nexport default {\n  getTasks: async () => {\n    console.log('get')\n    const result = await axios.get()\n\n\n    return result.data;\n  },\n\n  addTask: async (name) => {\n    console.log('addTask', name)\n    const result = await axios.post(``, { name: name, isComplete: false })\n    return result.data;\n  },\n\n\n  setCompleted: async (id, IsComplete) => {\n    console.log('setCompleted', { id, IsComplete })\n    const result = await axios.put(`/${id}`, { IsComplete: IsComplete })\n    return result.data;\n  },\n\n  deleteTask: async (id) => {\n    const result = await axios.delete(`/${id}`)\n    return result.data\n  }\n};\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AACzBA,KAAK,CAACC,QAAQ,CAACC,OAAO,GAACC,OAAO,CAACC,GAAG,CAACC,aAAa;AAGhD,MAAMC,SAAS,GAAGN,KAAK,CAACO,MAAM,CAAC;EAC7BL,OAAO,EAAEC,OAAO,CAACC,GAAG,CAACC;AACvB,CAAC,CAAC;AACFL,KAAK,CAACC,QAAQ,CAACC,OAAO,GAAGC,OAAO,CAACC,GAAG,CAACC,aAAa;AAElDC,SAAS,CAACE,YAAY,CAACC,QAAQ,CAACC,GAAG,CACjCD,QAAQ,IAAIA,QAAQ,EACpBE,KAAK,IAAI;EAEPC,OAAO,CAACD,KAAK,CAACA,KAAK,CAAC;EACpB,OAAOE,OAAO,CAACC,MAAM,CAACH,KAAK,CAAC;AAC9B,CAAC,CACF;AACD;;AAEA,eAAe;EACbI,QAAQ,EAAE,MAAAA,CAAA,KAAY;IACpBH,OAAO,CAACI,GAAG,CAAC,KAAK,CAAC;IAClB,MAAMC,MAAM,GAAG,MAAMjB,KAAK,CAACkB,GAAG,EAAE;IAGhC,OAAOD,MAAM,CAACE,IAAI;EACpB,CAAC;EAEDC,OAAO,EAAE,MAAOC,IAAI,IAAK;IACvBT,OAAO,CAACI,GAAG,CAAC,SAAS,EAAEK,IAAI,CAAC;IAC5B,MAAMJ,MAAM,GAAG,MAAMjB,KAAK,CAACsB,IAAI,CAAE,EAAC,EAAE;MAAED,IAAI,EAAEA,IAAI;MAAEE,UAAU,EAAE;IAAM,CAAC,CAAC;IACtE,OAAON,MAAM,CAACE,IAAI;EACpB,CAAC;EAGDK,YAAY,EAAE,MAAAA,CAAOC,EAAE,EAAEC,UAAU,KAAK;IACtCd,OAAO,CAACI,GAAG,CAAC,cAAc,EAAE;MAAES,EAAE;MAAEC;IAAW,CAAC,CAAC;IAC/C,MAAMT,MAAM,GAAG,MAAMjB,KAAK,CAAC2B,GAAG,CAAE,IAAGF,EAAG,EAAC,EAAE;MAAEC,UAAU,EAAEA;IAAW,CAAC,CAAC;IACpE,OAAOT,MAAM,CAACE,IAAI;EACpB,CAAC;EAEDS,UAAU,EAAE,MAAOH,EAAE,IAAK;IACxB,MAAMR,MAAM,GAAG,MAAMjB,KAAK,CAAC6B,MAAM,CAAE,IAAGJ,EAAG,EAAC,CAAC;IAC3C,OAAOR,MAAM,CAACE,IAAI;EACpB;AACF,CAAC"},"metadata":{},"sourceType":"module"}