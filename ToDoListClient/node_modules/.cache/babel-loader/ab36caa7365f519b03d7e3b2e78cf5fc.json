{"ast":null,"code":"import axios from 'axios';\naxios.defaults.baseURL = \"http://localhost:5248\";\nconst apiClient = axios.create({\n  baseURL: \"http://localhost:5248\"\n});\napiClient.interceptors.response.use(response => response, error => {\n  console.error(error);\n  return Promise.reject(error);\n});\n// const apiUrl = \"http://localhost:5248\"\n\nexport default {\n  getTasks: async () => {\n    const result = await axios.get(` `);\n    return result.data;\n  },\n  addTask: async name => {\n    console.log('addTask', name);\n    const result = await axios.post(`/todoitems`, {\n      name: name,\n      isComplete: false\n    });\n    return result.data;\n  },\n  setCompleted: async (id, IsComplete) => {\n    console.log('setCompleted', {\n      id,\n      IsComplete\n    });\n    const result = await axios.put(`/todoitems/${id}`, {\n      IsComplete: IsComplete\n    });\n    return result.data;\n  },\n  deleteTask: async id => {\n    const result = await axios.delete(`/todoitems/${id}`);\n    return result.data;\n  }\n};","map":{"version":3,"names":["axios","defaults","baseURL","apiClient","create","interceptors","response","use","error","console","Promise","reject","getTasks","result","get","data","addTask","name","log","post","isComplete","setCompleted","id","IsComplete","put","deleteTask","delete"],"sources":["C:/Users/User/Documents/תכנות רחלי/תכנות ו/ToDoListReact-master/src/service.js"],"sourcesContent":["import axios from 'axios';\n\naxios.defaults.baseURL=\"http://localhost:5248\";\nconst apiClient = axios.create({\n  baseURL: \"http://localhost:5248\",\n});\n\napiClient.interceptors.response.use(\n  response => response,\n  error => {\n    console.error(error);\n    return Promise.reject(error);\n  }\n)\n// const apiUrl = \"http://localhost:5248\"\n\nexport default {\n  getTasks: async () => {\n    const result = await axios.get(` `)  \n    \n     \n    return result.data;\n  },\n\n  addTask: async(name)=>{\n    console.log('addTask', name)\n    const result = await axios.post(`/todoitems`, {name:name,isComplete:false }) \n    return result.data;\n  },\n\n \n  setCompleted: async(id, IsComplete)=>{\n    console.log('setCompleted', {id, IsComplete})\n    const result = await axios.put(`/todoitems/${id}`,{IsComplete:IsComplete}) \n    return result.data;\n  },\n\n  deleteTask:async(id)=>{\n    const result = await axios.delete(`/todoitems/${id}`) \n    return result.data\n  }\n};\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzBA,KAAK,CAACC,QAAQ,CAACC,OAAO,GAAC,uBAAuB;AAC9C,MAAMC,SAAS,GAAGH,KAAK,CAACI,MAAM,CAAC;EAC7BF,OAAO,EAAE;AACX,CAAC,CAAC;AAEFC,SAAS,CAACE,YAAY,CAACC,QAAQ,CAACC,GAAG,CACjCD,QAAQ,IAAIA,QAAQ,EACpBE,KAAK,IAAI;EACPC,OAAO,CAACD,KAAK,CAACA,KAAK,CAAC;EACpB,OAAOE,OAAO,CAACC,MAAM,CAACH,KAAK,CAAC;AAC9B,CAAC,CACF;AACD;;AAEA,eAAe;EACbI,QAAQ,EAAE,MAAAA,CAAA,KAAY;IACpB,MAAMC,MAAM,GAAG,MAAMb,KAAK,CAACc,GAAG,CAAE,GAAE,CAAC;IAGnC,OAAOD,MAAM,CAACE,IAAI;EACpB,CAAC;EAEDC,OAAO,EAAE,MAAMC,IAAI,IAAG;IACpBR,OAAO,CAACS,GAAG,CAAC,SAAS,EAAED,IAAI,CAAC;IAC5B,MAAMJ,MAAM,GAAG,MAAMb,KAAK,CAACmB,IAAI,CAAE,YAAW,EAAE;MAACF,IAAI,EAACA,IAAI;MAACG,UAAU,EAAC;IAAM,CAAC,CAAC;IAC5E,OAAOP,MAAM,CAACE,IAAI;EACpB,CAAC;EAGDM,YAAY,EAAE,MAAAA,CAAMC,EAAE,EAAEC,UAAU,KAAG;IACnCd,OAAO,CAACS,GAAG,CAAC,cAAc,EAAE;MAACI,EAAE;MAAEC;IAAU,CAAC,CAAC;IAC7C,MAAMV,MAAM,GAAG,MAAMb,KAAK,CAACwB,GAAG,CAAE,cAAaF,EAAG,EAAC,EAAC;MAACC,UAAU,EAACA;IAAU,CAAC,CAAC;IAC1E,OAAOV,MAAM,CAACE,IAAI;EACpB,CAAC;EAEDU,UAAU,EAAC,MAAMH,EAAE,IAAG;IACpB,MAAMT,MAAM,GAAG,MAAMb,KAAK,CAAC0B,MAAM,CAAE,cAAaJ,EAAG,EAAC,CAAC;IACrD,OAAOT,MAAM,CAACE,IAAI;EACpB;AACF,CAAC"},"metadata":{},"sourceType":"module"}