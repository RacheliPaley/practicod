{"ast":null,"code":"import axios from 'axios';\naxios.defaults.baseURL = \"http://localhost:5248/todoitems\";\nconst apiClient = axios.create({\n  baseURL: \"http://localhost:5248\"\n});\n\n// apiClient.interceptors.response.use(\n//   response => response,\n//   error => {\n//     console.error(error);\n//     return Promise.reject(error);\n//   }\n// )\nconst apiUrl = \"http://localhost:5248\";\nexport default {\n  getTasks: async () => {\n    const result = await axios.get();\n    return result.data;\n  },\n  addTask: async name => {\n    console.log('addTask', name);\n    const result = await axios.post({\n      name: name,\n      isComplete: false\n    });\n    return result.data;\n  },\n  setCompleted: async (id, IsComplete) => {\n    console.log('setCompleted', {\n      id,\n      IsComplete\n    });\n    const result = await axios.put(`/${id}`, {\n      IsComplete: IsComplete\n    });\n    return result.data;\n  },\n  deleteTask: async id => {\n    const result = await axios.delete(`/${id}`);\n    return result.data;\n  }\n};","map":{"version":3,"names":["axios","defaults","baseURL","apiClient","create","apiUrl","getTasks","result","get","data","addTask","name","console","log","post","isComplete","setCompleted","id","IsComplete","put","deleteTask","delete"],"sources":["C:/Users/User/Documents/תכנות רחלי/תכנות ו/ToDoListReact-master/src/service.js"],"sourcesContent":["import axios from 'axios';\n\naxios.defaults.baseURL=\"http://localhost:5248/todoitems\";\nconst apiClient = axios.create({\n  baseURL: \"http://localhost:5248\",\n});\n\n// apiClient.interceptors.response.use(\n//   response => response,\n//   error => {\n//     console.error(error);\n//     return Promise.reject(error);\n//   }\n// )\nconst apiUrl = \"http://localhost:5248\"\n\nexport default {\n  getTasks: async () => {\n    const result = await axios.get()  \n    \n     \n    return result.data;\n  },\n\n  addTask: async(name)=>{\n    console.log('addTask', name)\n    const result = await axios.post( {name:name,isComplete:false }) \n    return result.data;\n  },\n\n \n  setCompleted: async(id, IsComplete)=>{\n    console.log('setCompleted', {id, IsComplete})\n    const result = await axios.put(`/${id}`,{IsComplete:IsComplete}) \n    return result.data;\n  },\n\n  deleteTask:async(id)=>{\n    const result = await axios.delete(`/${id}`) \n    return result.data\n  }\n};\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzBA,KAAK,CAACC,QAAQ,CAACC,OAAO,GAAC,iCAAiC;AACxD,MAAMC,SAAS,GAAGH,KAAK,CAACI,MAAM,CAAC;EAC7BF,OAAO,EAAE;AACX,CAAC,CAAC;;AAEF;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAMG,MAAM,GAAG,uBAAuB;AAEtC,eAAe;EACbC,QAAQ,EAAE,MAAAA,CAAA,KAAY;IACpB,MAAMC,MAAM,GAAG,MAAMP,KAAK,CAACQ,GAAG,EAAE;IAGhC,OAAOD,MAAM,CAACE,IAAI;EACpB,CAAC;EAEDC,OAAO,EAAE,MAAMC,IAAI,IAAG;IACpBC,OAAO,CAACC,GAAG,CAAC,SAAS,EAAEF,IAAI,CAAC;IAC5B,MAAMJ,MAAM,GAAG,MAAMP,KAAK,CAACc,IAAI,CAAE;MAACH,IAAI,EAACA,IAAI;MAACI,UAAU,EAAC;IAAM,CAAC,CAAC;IAC/D,OAAOR,MAAM,CAACE,IAAI;EACpB,CAAC;EAGDO,YAAY,EAAE,MAAAA,CAAMC,EAAE,EAAEC,UAAU,KAAG;IACnCN,OAAO,CAACC,GAAG,CAAC,cAAc,EAAE;MAACI,EAAE;MAAEC;IAAU,CAAC,CAAC;IAC7C,MAAMX,MAAM,GAAG,MAAMP,KAAK,CAACmB,GAAG,CAAE,IAAGF,EAAG,EAAC,EAAC;MAACC,UAAU,EAACA;IAAU,CAAC,CAAC;IAChE,OAAOX,MAAM,CAACE,IAAI;EACpB,CAAC;EAEDW,UAAU,EAAC,MAAMH,EAAE,IAAG;IACpB,MAAMV,MAAM,GAAG,MAAMP,KAAK,CAACqB,MAAM,CAAE,IAAGJ,EAAG,EAAC,CAAC;IAC3C,OAAOV,MAAM,CAACE,IAAI;EACpB;AACF,CAAC"},"metadata":{},"sourceType":"module"}